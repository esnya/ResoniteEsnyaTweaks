<!-- This file contains common properties shared across all projects in this solution -->
<Project>
  <!-- Common build properties -->
  <PropertyGroup>
    <GenerateAssemblyInfo>True</GenerateAssemblyInfo>
    <TargetFramework>net472</TargetFramework>
    <FileAlignment>512</FileAlignment>
    <LangVersion>10.0</LangVersion>
    <Nullable>enable</Nullable>
    <Deterministic>true</Deterministic>
    <CopyToMods Condition="'$(CopyToMods)'==''">true</CopyToMods>
    <DebugType Condition="'$(Configuration)'=='Debug'">embedded</DebugType>
    <PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
    <EnforceCodeStyleInBuild>True</EnforceCodeStyleInBuild>
    <EnableNETAnalyzers>True</EnableNETAnalyzers>
    <AnalysisLevel>latest-all</AnalysisLevel>
    <WarningLevel>9999</WarningLevel>
    <AutoGenerateBindingRedirects>True</AutoGenerateBindingRedirects>
    <Platforms>AnyCPU;x64</Platforms>
  </PropertyGroup>

  <!-- Common assembly metadata -->
  <PropertyGroup>
    <Authors>esnya</Authors>
    <RepositoryUrl>https://github.com/esnya/EsnyaTweaks</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>Resonite,Mod,ResoniteModLoader</PackageTags>
    <Version>0.1.0</Version>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <Description></Description>
  </PropertyGroup>

  <!-- Derived properties -->
  <PropertyGroup>
    <Product>$(AssemblyTitle)</Product>
    <Copyright>Copylight (c) 2024 $(Authors)</Copyright>
    <PackageProjectUrl>$(RepositoryUrl)</PackageProjectUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <GenerateDocumentationFile>False</GenerateDocumentationFile>
    <DelaySign>False</DelaySign>
  </PropertyGroup>

  <!-- Resonite path detection -->
  <PropertyGroup Condition="'$(ResonitePath)'==''">
    <!-- If you don't want to provide a ResonitePath in dotnet build, you can specify one here -->
    <ResonitePath>$(MSBuildThisFileDirectory)Resonite/</ResonitePath>
    <!-- GitHub Actions build-rml-mod action installs to project-specific Resonite directory -->
    <ResonitePath Condition="Exists('$(MSBuildProjectDirectory)\Resonite\')">$(MSBuildProjectDirectory)\Resonite\</ResonitePath>
    <!-- Standard Steam installation paths -->
    <ResonitePath Condition="Exists('C:\Program Files (x86)\Steam\steamapps\common\Resonite\')">C:\Program Files (x86)\Steam\steamapps\common\Resonite\</ResonitePath>
    <ResonitePath Condition="Exists('$(HOME)/.steam/steam/steamapps/common/Resonite/')">$(HOME)/.steam/steam/steamapps/common/Resonite/</ResonitePath>
    <!-- Alternative Steam paths -->
    <ResonitePath Condition="Exists('C:\Program Files\Steam\steamapps\common\Resonite\')">C:\Program Files\Steam\steamapps\common\Resonite\</ResonitePath>
    <ResonitePath Condition="Exists('$(USERPROFILE)\.steam\steam\steamapps\common\Resonite\')">$(USERPROFILE)\.steam\steam\steamapps\common\Resonite\</ResonitePath>
    <!-- Steam Deck and other Linux distributions -->
    <ResonitePath Condition="Exists('$(HOME)/.local/share/Steam/steamapps/common/Resonite/')">$(HOME)/.local/share/Steam/steamapps/common/Resonite/</ResonitePath>
    <ResonitePath Condition="Exists('/home/deck/.steam/steam/steamapps/common/Resonite/')">ï¿½home/deck/.steam/steam/steamapps/common/Resonite/</ResonitePath>
  </PropertyGroup>
</Project>
