<!-- This file contains common properties shared across all projects in this solution -->
<Project>
  <!-- Common assembly metadata -->
  <PropertyGroup>
    <Authors>esnya</Authors>
    <RepositoryUrl>https://github.com/esnya/EsnyaTweaks</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>Resonite,Mod,ResoniteModLoader</PackageTags>
    <Version>0.1.1</Version>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <!-- Common build properties -->
  <PropertyGroup>
    <TargetFramework>net472</TargetFramework>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <CopyToMods Condition="'$(CopyToMods)'==''">true</CopyToMods>
    <DebugType Condition="'$(Configuration)'=='Debug'">embedded</DebugType>
    <EnforceCodeStyleInBuild>True</EnforceCodeStyleInBuild>
    <EnableNETAnalyzers>True</EnableNETAnalyzers>
    <AnalysisLevel>latest-all</AnalysisLevel>
    <WarningLevel>9999</WarningLevel>
    <Platforms>AnyCPU;x64</Platforms>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- Derived properties -->
  <PropertyGroup>
    <Product>$(AssemblyTitle)</Product>
    <Copyright>Copyright (c) 2024 $(Authors)</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>

    <!-- Auto-generate common properties from MSBuildProjectName -->
    <RootNamespace Condition="'$(RootNamespace)'==''">EsnyaTweaks.$(MSBuildProjectName)</RootNamespace>
    <AssemblyName Condition="'$(AssemblyName)'==''">EsnyaTweaks.$(MSBuildProjectName)</AssemblyName>
    <AssemblyTitle Condition="'$(AssemblyTitle)'==''">$(AssemblyName)</AssemblyTitle>
    <Title Condition="'$(Title)'==''">$(AssemblyTitle)</Title>
  </PropertyGroup>

  <!-- Resonite path detection -->
  <PropertyGroup Condition="'$(ResonitePath)'==''">
    <!-- If you don't want to provide a ResonitePath in dotnet build, you can specify one here -->
    <ResonitePath>$(MSBuildThisFileDirectory)Resonite/</ResonitePath>
    <!-- GitHub Actions build-rml-mod action installs to project-specific Resonite directory -->
    <ResonitePath Condition="Exists('$(MSBuildProjectDirectory)\Resonite\')">$(MSBuildProjectDirectory)\Resonite\</ResonitePath>
    <!-- Standard Steam installation paths -->
    <ResonitePath Condition="Exists('C:\Program Files (x86)\Steam\steamapps\common\Resonite\')">C:\Program Files (x86)\Steam\steamapps\common\Resonite\</ResonitePath>
    <ResonitePath Condition="Exists('$(HOME)/.steam/steam/steamapps/common/Resonite/')">$(HOME)/.steam/steam/steamapps/common/Resonite/</ResonitePath>
    <!-- Alternative Steam paths -->
    <ResonitePath Condition="Exists('C:\Program Files\Steam\steamapps\common\Resonite\')">C:\Program Files\Steam\steamapps\common\Resonite\</ResonitePath>
    <ResonitePath Condition="Exists('$(USERPROFILE)\.steam\steam\steamapps\common\Resonite\')">$(USERPROFILE)\.steam\steam\steamapps\common\Resonite\</ResonitePath>
    <!-- Steam Deck and other Linux distributions -->
    <ResonitePath Condition="Exists('$(HOME)/.local/share/Steam/steamapps/common/Resonite/')">$(HOME)/.local/share/Steam/steamapps/common/Resonite/</ResonitePath>
    <ResonitePath Condition="Exists('/home/deck/.steam/steam/steamapps/common/Resonite/')">/home/deck/.steam/steam/steamapps/common/Resonite/</ResonitePath>
  </PropertyGroup>

  <!-- Common reference assemblies -->
  <ItemGroup>
    <Reference Include="ResoniteModLoader">
      <HintPath>$(ResonitePath)Libraries\ResoniteModLoader.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="HarmonyLib">
      <HintPath>$(ResonitePath)rml_libs\0Harmony.dll</HintPath>
      <HintPath Condition="Exists('$(ResonitePath)0Harmony.dll')">$(ResonitePath)0Harmony.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="FrooxEngine">
      <HintPath>$(ResonitePath)Resonite_Data\Managed\FrooxEngine.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Elements.Core">
      <HintPath>$(ResonitePath)Resonite_Data\Managed\Elements.Core.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>$(ResonitePath)Resonite_Data\Managed\Newtonsoft.Json.dll</HintPath>
      <Private>False</Private>
    </Reference>

    <!-- Debug mode hot reload library -->
    <Reference Include="ResoniteHotReloadLib" Condition="'$(Configuration)'=='Debug'">
      <HintPath>$(ResonitePath)rml_libs\ResoniteHotReloadLib.dll</HintPath>
      <Private>False</Private>
    </Reference>

    <!-- ProtoFlux references (used by FluxLoopTweaks) -->
    <Reference Include="ProtoFlux.Core">
      <HintPath>$(ResonitePath)Resonite_Data\Managed\ProtoFlux.Core.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="ProtoFlux.Nodes.FrooxEngine">
      <HintPath>$(ResonitePath)Resonite_Data\Managed\ProtoFlux.Nodes.FrooxEngine.dll</HintPath>
      <Private>False</Private>
    </Reference>

    <!-- SystemHelper reference (used by SystemHelperTweaks) -->
    <Reference Include="SystemHelperClient">
      <HintPath>$(ResonitePath)Resonite_Data\Managed\SystemHelperClient.dll</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>

  <!-- Common editor config exclusion -->
  <ItemGroup>
    <EditorConfigFiles Remove="$(MSBuildThisFileDirectory)**\*.editorconfig" />
  </ItemGroup>

  <!-- Include common documentation files in all projects -->
  <ItemGroup>
    <None Include="$(MSBuildThisFileDirectory)README.md" Link="README.md" />
    <None Include="$(MSBuildThisFileDirectory)LICENSE" Link="LICENSE" />
    <None Include="$(MSBuildThisFileDirectory).editorconfig" Link=".editorconfig" />
    <None Include="$(MSBuildThisFileDirectory).gitignore" Link=".gitignore" />
    <None Include="$(MSBuildThisFileDirectory).gitattributes" Link=".gitattributes" />
    <None Include="$(MSBuildThisFileDirectory)Directory.Build.props" Link="Directory.Build.props" />
    <None Include="$(MSBuildThisFileDirectory)Directory.Build.targets" Link="Directory.Build.targets" />
    <None Include="$(MSBuildThisFileDirectory).github\workflows\release.yml" Link=".github\workflows\release.yml" />
  </ItemGroup>
</Project>
