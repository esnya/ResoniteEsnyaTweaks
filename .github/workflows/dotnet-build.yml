name: .NET Build

on:
  push:
    branches:
      - master
      - feature/ci
    tags:
      - v*
  pull_request:
    branches:
      - master



jobs:
  vtag:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set version from tag
        run: |
          VERSION="${GITHUB_REF#refs/tags/v}"
          find . -name '*.csproj' -print0 | while IFS= read -r -d '' FILE; do
            sed -i "s|<Version>[^<]*</Version>|<Version>${VERSION}</Version>|" "$FILE"
          done
    outputs:
      tagged: true
      tag: ${{ github.ref }}

  build:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - project: FluxLoopTweaks
            artifact: EsnyaTweaks.FluxLoopTweaks.dll
          - project: LODGroupTweaks
            artifact: EsnyaTweaks.LODGroupTweaks.dll
          - project: PhotonDustTweaks
            artifact: EsnyaTweaks.PhotonDustTweaks.dll
          - project: SystemHelperTweaks
            artifact: EsnyaTweaks.SystemHelperTweaks.dll
          - project: UniLogTweaks
            artifact: EsnyaTweaks.UniLogTweaks.dll
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build
        uses: esnya/build-rml-mod@v1
        with:
          project: ${{ github.workspace }}/${{ matrix.project }}
          steam-login: ${{ secrets.STEAMLOGIN }}
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: bin/Release/${{ matrix.artifact }}

  release:
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || needs.vtag.outputs.tagged)
    needs:
      - vtag
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.vtag.outputs.tagged && needs.vtag.outputs.tag || github.ref }}
          fetch-depth: 0
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: '*.dll'
          merge-multiple: true
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.dll
          generate_release_notes: true
          tag_name: ${{ needs.vtag.outputs.tagged && needs.vtag.outputs.tag || github.ref }}

